name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # ou a branch que você deseja monitorar

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.4.18
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.13.1'

    - name: Install dependencies
      run: npm install

    - name: Wait for MongoDB to be ready
      run: |
        for i in `seq 1 30`; do
          nc -z localhost 27017 && echo "MongoDB is up and running" && break
          echo "Waiting for MongoDB..."
          sleep 2
        done

    - name: Set environment variables
      run: |
        echo "MONGO_HOST=mongodb://localhost:27017" >> $GITHUB_ENV
        echo "MONGO_DATABASE=library" >> $GITHUB_ENV

    - name: Run tests
      run: npm test

    - name: Disconnect from database (if necessary)
      run: node -e "const { disconnectDB } = require('./src/database/db'); disconnectDB();"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: .docker/Dockerfile.prod
        push: true
        tags: k3ynet/comp-api:latest  # Substitua user/repo pela sua conta/repositório no Docker Hub

    - name: Build and push Docker Compose services
      run: docker compose -f .docker/docker-compose.prod.yaml up -d --build
